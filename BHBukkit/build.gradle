plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'me.nettychannell'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

dependencies {
    compileOnly "com.destroystokyo.paper:paper-api:1.12-R0.1-SNAPSHOT"

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"
    implementation files('../libs/loadit.jar')
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}


tasks {
    shadowJar {
        relocate "it.ytnoos", "me.nettychannell.bhbukkit.externals.loadit"

        archiveFileName = project.name + "-" + project.version + ".jar"
    }
    compileJava {
        options.encoding = 'UTF-8'
    }
    javadoc {
        options.encoding = 'UTF-8'
    }
    processResources {
        filteringCharset = 'UTF-8'
    }
}

tasks.register("prepareKotlinBuildScriptModel"){}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
